// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/proxy/blackhole/config.proto

package com.v2ray.core.proxy.blackhole;

public final class ConfigProto {
  private ConfigProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NoneResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.blackhole.NoneResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code v2ray.core.proxy.blackhole.NoneResponse}
   */
  public  static final class NoneResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v2ray.core.proxy.blackhole.NoneResponse)
      NoneResponseOrBuilder {
    // Use NoneResponse.newBuilder() to construct.
    private NoneResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NoneResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NoneResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_NoneResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.class, com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse)) {
        return super.equals(obj);
      }
      com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse other = (com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v2ray.core.proxy.blackhole.NoneResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v2ray.core.proxy.blackhole.NoneResponse)
        com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_NoneResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.class, com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.Builder.class);
      }

      // Construct using com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse getDefaultInstanceForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.getDefaultInstance();
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse build() {
        com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse buildPartial() {
        com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse result = new com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse) {
          return mergeFrom((com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse other) {
        if (other == com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:v2ray.core.proxy.blackhole.NoneResponse)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.proxy.blackhole.NoneResponse)
    private static final com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse();
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NoneResponse>
        PARSER = new com.google.protobuf.AbstractParser<NoneResponse>() {
      public NoneResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NoneResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NoneResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NoneResponse> getParserForType() {
      return PARSER;
    }

    public com.v2ray.core.proxy.blackhole.ConfigProto.NoneResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HTTPResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.blackhole.HTTPResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code v2ray.core.proxy.blackhole.HTTPResponse}
   */
  public  static final class HTTPResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v2ray.core.proxy.blackhole.HTTPResponse)
      HTTPResponseOrBuilder {
    // Use HTTPResponse.newBuilder() to construct.
    private HTTPResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HTTPResponse() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HTTPResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_HTTPResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.class, com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse)) {
        return super.equals(obj);
      }
      com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse other = (com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v2ray.core.proxy.blackhole.HTTPResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v2ray.core.proxy.blackhole.HTTPResponse)
        com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_HTTPResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.class, com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.Builder.class);
      }

      // Construct using com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse getDefaultInstanceForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.getDefaultInstance();
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse build() {
        com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse buildPartial() {
        com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse result = new com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse) {
          return mergeFrom((com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse other) {
        if (other == com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:v2ray.core.proxy.blackhole.HTTPResponse)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.proxy.blackhole.HTTPResponse)
    private static final com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse();
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HTTPResponse>
        PARSER = new com.google.protobuf.AbstractParser<HTTPResponse>() {
      public HTTPResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HTTPResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HTTPResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HTTPResponse> getParserForType() {
      return PARSER;
    }

    public com.v2ray.core.proxy.blackhole.ConfigProto.HTTPResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:v2ray.core.proxy.blackhole.Config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    com.v2ray.core.common.serial.TypedMessageProto.TypedMessage getResponse();
    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * Protobuf type {@code v2ray.core.proxy.blackhole.Config}
   */
  public  static final class Config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:v2ray.core.proxy.blackhole.Config)
      ConfigOrBuilder {
    // Use Config.newBuilder() to construct.
    private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Config() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.proxy.blackhole.ConfigProto.Config.class, com.v2ray.core.proxy.blackhole.ConfigProto.Config.Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private com.v2ray.core.common.serial.TypedMessageProto.TypedMessage response_;
    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    public com.v2ray.core.common.serial.TypedMessageProto.TypedMessage getResponse() {
      return response_ == null ? com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.getDefaultInstance() : response_;
    }
    /**
     * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
     */
    public com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.v2ray.core.proxy.blackhole.ConfigProto.Config)) {
        return super.equals(obj);
      }
      com.v2ray.core.proxy.blackhole.ConfigProto.Config other = (com.v2ray.core.proxy.blackhole.ConfigProto.Config) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.v2ray.core.proxy.blackhole.ConfigProto.Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code v2ray.core.proxy.blackhole.Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:v2ray.core.proxy.blackhole.Config)
        com.v2ray.core.proxy.blackhole.ConfigProto.ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.v2ray.core.proxy.blackhole.ConfigProto.Config.class, com.v2ray.core.proxy.blackhole.ConfigProto.Config.Builder.class);
      }

      // Construct using com.v2ray.core.proxy.blackhole.ConfigProto.Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.internal_static_v2ray_core_proxy_blackhole_Config_descriptor;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.Config getDefaultInstanceForType() {
        return com.v2ray.core.proxy.blackhole.ConfigProto.Config.getDefaultInstance();
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.Config build() {
        com.v2ray.core.proxy.blackhole.ConfigProto.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.v2ray.core.proxy.blackhole.ConfigProto.Config buildPartial() {
        com.v2ray.core.proxy.blackhole.ConfigProto.Config result = new com.v2ray.core.proxy.blackhole.ConfigProto.Config(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.v2ray.core.proxy.blackhole.ConfigProto.Config) {
          return mergeFrom((com.v2ray.core.proxy.blackhole.ConfigProto.Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.v2ray.core.proxy.blackhole.ConfigProto.Config other) {
        if (other == com.v2ray.core.proxy.blackhole.ConfigProto.Config.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.v2ray.core.proxy.blackhole.ConfigProto.Config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.v2ray.core.proxy.blackhole.ConfigProto.Config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.v2ray.core.common.serial.TypedMessageProto.TypedMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.v2ray.core.common.serial.TypedMessageProto.TypedMessage, com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder> responseBuilder_;
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public com.v2ray.core.common.serial.TypedMessageProto.TypedMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public Builder setResponse(com.v2ray.core.common.serial.TypedMessageProto.TypedMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public Builder setResponse(
          com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public Builder mergeResponse(com.v2ray.core.common.serial.TypedMessageProto.TypedMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      public com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <code>optional .v2ray.core.common.serial.TypedMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.v2ray.core.common.serial.TypedMessageProto.TypedMessage, com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder> 
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.v2ray.core.common.serial.TypedMessageProto.TypedMessage, com.v2ray.core.common.serial.TypedMessageProto.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageProto.TypedMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:v2ray.core.proxy.blackhole.Config)
    }

    // @@protoc_insertion_point(class_scope:v2ray.core.proxy.blackhole.Config)
    private static final com.v2ray.core.proxy.blackhole.ConfigProto.Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.v2ray.core.proxy.blackhole.ConfigProto.Config();
    }

    public static com.v2ray.core.proxy.blackhole.ConfigProto.Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Config>
        PARSER = new com.google.protobuf.AbstractParser<Config>() {
      public Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Config> getParserForType() {
      return PARSER;
    }

    public com.v2ray.core.proxy.blackhole.ConfigProto.Config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_proxy_blackhole_NoneResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_proxy_blackhole_HTTPResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_v2ray_core_proxy_blackhole_Config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_v2ray_core_proxy_blackhole_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+v2ray.com/core/proxy/blackhole/config." +
      "proto\022\032v2ray.core.proxy.blackhole\0320v2ray" +
      ".com/core/common/serial/typed_message.pr" +
      "oto\"\016\n\014NoneResponse\"\016\n\014HTTPResponse\"B\n\006C" +
      "onfig\0228\n\010response\030\001 \001(\0132&.v2ray.core.com" +
      "mon.serial.TypedMessageBU\n\036com.v2ray.cor" +
      "e.proxy.blackholeB\013ConfigProtoZ\tblackhol" +
      "e\252\002\032V2Ray.Core.Proxy.Blackholeb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.v2ray.core.common.serial.TypedMessageProto.getDescriptor(),
        }, assigner);
    internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_v2ray_core_proxy_blackhole_NoneResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_proxy_blackhole_NoneResponse_descriptor,
        new java.lang.String[] { });
    internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_v2ray_core_proxy_blackhole_HTTPResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_proxy_blackhole_HTTPResponse_descriptor,
        new java.lang.String[] { });
    internal_static_v2ray_core_proxy_blackhole_Config_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_v2ray_core_proxy_blackhole_Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_v2ray_core_proxy_blackhole_Config_descriptor,
        new java.lang.String[] { "Response", });
    com.v2ray.core.common.serial.TypedMessageProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
