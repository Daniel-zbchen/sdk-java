// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v2ray.com/core/config.proto

package com.v2ray.core;

/**
 * Protobuf type {@code v2ray.core.Config}
 */
public  final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:v2ray.core.Config)
    ConfigOrBuilder {
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    inbound_ = java.util.Collections.emptyList();
    outbound_ = java.util.Collections.emptyList();
    app_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Config(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              inbound_ = new java.util.ArrayList<com.v2ray.core.app.proxyman.InboundHandlerConfig>();
              mutable_bitField0_ |= 0x00000001;
            }
            inbound_.add(
                input.readMessage(com.v2ray.core.app.proxyman.InboundHandlerConfig.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              outbound_ = new java.util.ArrayList<com.v2ray.core.app.proxyman.OutboundHandlerConfig>();
              mutable_bitField0_ |= 0x00000002;
            }
            outbound_.add(
                input.readMessage(com.v2ray.core.app.proxyman.OutboundHandlerConfig.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              app_ = new java.util.ArrayList<com.v2ray.core.common.serial.TypedMessage>();
              mutable_bitField0_ |= 0x00000004;
            }
            app_.add(
                input.readMessage(com.v2ray.core.common.serial.TypedMessage.parser(), extensionRegistry));
            break;
          }
          case 42: {
            com.v2ray.core.transport.Config.Builder subBuilder = null;
            if (transport_ != null) {
              subBuilder = transport_.toBuilder();
            }
            transport_ = input.readMessage(com.v2ray.core.transport.Config.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(transport_);
              transport_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        inbound_ = java.util.Collections.unmodifiableList(inbound_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        outbound_ = java.util.Collections.unmodifiableList(outbound_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        app_ = java.util.Collections.unmodifiableList(app_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.v2ray.core.ConfigOuterClass.internal_static_v2ray_core_Config_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.v2ray.core.ConfigOuterClass.internal_static_v2ray_core_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.v2ray.core.Config.class, com.v2ray.core.Config.Builder.class);
  }

  private int bitField0_;
  public static final int INBOUND_FIELD_NUMBER = 1;
  private java.util.List<com.v2ray.core.app.proxyman.InboundHandlerConfig> inbound_;
  /**
   * <pre>
   * Inbound handler configurations. Must have at least one item.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
   */
  public java.util.List<com.v2ray.core.app.proxyman.InboundHandlerConfig> getInboundList() {
    return inbound_;
  }
  /**
   * <pre>
   * Inbound handler configurations. Must have at least one item.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
   */
  public java.util.List<? extends com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder> 
      getInboundOrBuilderList() {
    return inbound_;
  }
  /**
   * <pre>
   * Inbound handler configurations. Must have at least one item.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
   */
  public int getInboundCount() {
    return inbound_.size();
  }
  /**
   * <pre>
   * Inbound handler configurations. Must have at least one item.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
   */
  public com.v2ray.core.app.proxyman.InboundHandlerConfig getInbound(int index) {
    return inbound_.get(index);
  }
  /**
   * <pre>
   * Inbound handler configurations. Must have at least one item.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
   */
  public com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder getInboundOrBuilder(
      int index) {
    return inbound_.get(index);
  }

  public static final int OUTBOUND_FIELD_NUMBER = 2;
  private java.util.List<com.v2ray.core.app.proxyman.OutboundHandlerConfig> outbound_;
  /**
   * <pre>
   * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
   */
  public java.util.List<com.v2ray.core.app.proxyman.OutboundHandlerConfig> getOutboundList() {
    return outbound_;
  }
  /**
   * <pre>
   * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
   */
  public java.util.List<? extends com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder> 
      getOutboundOrBuilderList() {
    return outbound_;
  }
  /**
   * <pre>
   * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
   */
  public int getOutboundCount() {
    return outbound_.size();
  }
  /**
   * <pre>
   * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
   */
  public com.v2ray.core.app.proxyman.OutboundHandlerConfig getOutbound(int index) {
    return outbound_.get(index);
  }
  /**
   * <pre>
   * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
   * </pre>
   *
   * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
   */
  public com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder getOutboundOrBuilder(
      int index) {
    return outbound_.get(index);
  }

  public static final int APP_FIELD_NUMBER = 4;
  private java.util.List<com.v2ray.core.common.serial.TypedMessage> app_;
  /**
   * <pre>
   * App configuration. Must be one in the app directory.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
   */
  public java.util.List<com.v2ray.core.common.serial.TypedMessage> getAppList() {
    return app_;
  }
  /**
   * <pre>
   * App configuration. Must be one in the app directory.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
   */
  public java.util.List<? extends com.v2ray.core.common.serial.TypedMessageOrBuilder> 
      getAppOrBuilderList() {
    return app_;
  }
  /**
   * <pre>
   * App configuration. Must be one in the app directory.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
   */
  public int getAppCount() {
    return app_.size();
  }
  /**
   * <pre>
   * App configuration. Must be one in the app directory.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
   */
  public com.v2ray.core.common.serial.TypedMessage getApp(int index) {
    return app_.get(index);
  }
  /**
   * <pre>
   * App configuration. Must be one in the app directory.
   * </pre>
   *
   * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
   */
  public com.v2ray.core.common.serial.TypedMessageOrBuilder getAppOrBuilder(
      int index) {
    return app_.get(index);
  }

  public static final int TRANSPORT_FIELD_NUMBER = 5;
  private com.v2ray.core.transport.Config transport_;
  /**
   * <code>optional .v2ray.core.transport.Config transport = 5;</code>
   */
  public boolean hasTransport() {
    return transport_ != null;
  }
  /**
   * <code>optional .v2ray.core.transport.Config transport = 5;</code>
   */
  public com.v2ray.core.transport.Config getTransport() {
    return transport_ == null ? com.v2ray.core.transport.Config.getDefaultInstance() : transport_;
  }
  /**
   * <code>optional .v2ray.core.transport.Config transport = 5;</code>
   */
  public com.v2ray.core.transport.ConfigOrBuilder getTransportOrBuilder() {
    return getTransport();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < inbound_.size(); i++) {
      output.writeMessage(1, inbound_.get(i));
    }
    for (int i = 0; i < outbound_.size(); i++) {
      output.writeMessage(2, outbound_.get(i));
    }
    for (int i = 0; i < app_.size(); i++) {
      output.writeMessage(4, app_.get(i));
    }
    if (transport_ != null) {
      output.writeMessage(5, getTransport());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < inbound_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, inbound_.get(i));
    }
    for (int i = 0; i < outbound_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, outbound_.get(i));
    }
    for (int i = 0; i < app_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, app_.get(i));
    }
    if (transport_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTransport());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.v2ray.core.Config)) {
      return super.equals(obj);
    }
    com.v2ray.core.Config other = (com.v2ray.core.Config) obj;

    boolean result = true;
    result = result && getInboundList()
        .equals(other.getInboundList());
    result = result && getOutboundList()
        .equals(other.getOutboundList());
    result = result && getAppList()
        .equals(other.getAppList());
    result = result && (hasTransport() == other.hasTransport());
    if (hasTransport()) {
      result = result && getTransport()
          .equals(other.getTransport());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getInboundCount() > 0) {
      hash = (37 * hash) + INBOUND_FIELD_NUMBER;
      hash = (53 * hash) + getInboundList().hashCode();
    }
    if (getOutboundCount() > 0) {
      hash = (37 * hash) + OUTBOUND_FIELD_NUMBER;
      hash = (53 * hash) + getOutboundList().hashCode();
    }
    if (getAppCount() > 0) {
      hash = (37 * hash) + APP_FIELD_NUMBER;
      hash = (53 * hash) + getAppList().hashCode();
    }
    if (hasTransport()) {
      hash = (37 * hash) + TRANSPORT_FIELD_NUMBER;
      hash = (53 * hash) + getTransport().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.v2ray.core.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.v2ray.core.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.v2ray.core.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.v2ray.core.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.v2ray.core.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.v2ray.core.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.v2ray.core.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code v2ray.core.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:v2ray.core.Config)
      com.v2ray.core.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.v2ray.core.ConfigOuterClass.internal_static_v2ray_core_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.v2ray.core.ConfigOuterClass.internal_static_v2ray_core_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.v2ray.core.Config.class, com.v2ray.core.Config.Builder.class);
    }

    // Construct using com.v2ray.core.Config.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInboundFieldBuilder();
        getOutboundFieldBuilder();
        getAppFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (inboundBuilder_ == null) {
        inbound_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        inboundBuilder_.clear();
      }
      if (outboundBuilder_ == null) {
        outbound_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        outboundBuilder_.clear();
      }
      if (appBuilder_ == null) {
        app_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        appBuilder_.clear();
      }
      if (transportBuilder_ == null) {
        transport_ = null;
      } else {
        transport_ = null;
        transportBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.v2ray.core.ConfigOuterClass.internal_static_v2ray_core_Config_descriptor;
    }

    public com.v2ray.core.Config getDefaultInstanceForType() {
      return com.v2ray.core.Config.getDefaultInstance();
    }

    public com.v2ray.core.Config build() {
      com.v2ray.core.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.v2ray.core.Config buildPartial() {
      com.v2ray.core.Config result = new com.v2ray.core.Config(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (inboundBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          inbound_ = java.util.Collections.unmodifiableList(inbound_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inbound_ = inbound_;
      } else {
        result.inbound_ = inboundBuilder_.build();
      }
      if (outboundBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          outbound_ = java.util.Collections.unmodifiableList(outbound_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.outbound_ = outbound_;
      } else {
        result.outbound_ = outboundBuilder_.build();
      }
      if (appBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          app_ = java.util.Collections.unmodifiableList(app_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.app_ = app_;
      } else {
        result.app_ = appBuilder_.build();
      }
      if (transportBuilder_ == null) {
        result.transport_ = transport_;
      } else {
        result.transport_ = transportBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.v2ray.core.Config) {
        return mergeFrom((com.v2ray.core.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.v2ray.core.Config other) {
      if (other == com.v2ray.core.Config.getDefaultInstance()) return this;
      if (inboundBuilder_ == null) {
        if (!other.inbound_.isEmpty()) {
          if (inbound_.isEmpty()) {
            inbound_ = other.inbound_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInboundIsMutable();
            inbound_.addAll(other.inbound_);
          }
          onChanged();
        }
      } else {
        if (!other.inbound_.isEmpty()) {
          if (inboundBuilder_.isEmpty()) {
            inboundBuilder_.dispose();
            inboundBuilder_ = null;
            inbound_ = other.inbound_;
            bitField0_ = (bitField0_ & ~0x00000001);
            inboundBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInboundFieldBuilder() : null;
          } else {
            inboundBuilder_.addAllMessages(other.inbound_);
          }
        }
      }
      if (outboundBuilder_ == null) {
        if (!other.outbound_.isEmpty()) {
          if (outbound_.isEmpty()) {
            outbound_ = other.outbound_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureOutboundIsMutable();
            outbound_.addAll(other.outbound_);
          }
          onChanged();
        }
      } else {
        if (!other.outbound_.isEmpty()) {
          if (outboundBuilder_.isEmpty()) {
            outboundBuilder_.dispose();
            outboundBuilder_ = null;
            outbound_ = other.outbound_;
            bitField0_ = (bitField0_ & ~0x00000002);
            outboundBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOutboundFieldBuilder() : null;
          } else {
            outboundBuilder_.addAllMessages(other.outbound_);
          }
        }
      }
      if (appBuilder_ == null) {
        if (!other.app_.isEmpty()) {
          if (app_.isEmpty()) {
            app_ = other.app_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAppIsMutable();
            app_.addAll(other.app_);
          }
          onChanged();
        }
      } else {
        if (!other.app_.isEmpty()) {
          if (appBuilder_.isEmpty()) {
            appBuilder_.dispose();
            appBuilder_ = null;
            app_ = other.app_;
            bitField0_ = (bitField0_ & ~0x00000004);
            appBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAppFieldBuilder() : null;
          } else {
            appBuilder_.addAllMessages(other.app_);
          }
        }
      }
      if (other.hasTransport()) {
        mergeTransport(other.getTransport());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.v2ray.core.Config parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.v2ray.core.Config) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.v2ray.core.app.proxyman.InboundHandlerConfig> inbound_ =
      java.util.Collections.emptyList();
    private void ensureInboundIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        inbound_ = new java.util.ArrayList<com.v2ray.core.app.proxyman.InboundHandlerConfig>(inbound_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.proxyman.InboundHandlerConfig, com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder> inboundBuilder_;

    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public java.util.List<com.v2ray.core.app.proxyman.InboundHandlerConfig> getInboundList() {
      if (inboundBuilder_ == null) {
        return java.util.Collections.unmodifiableList(inbound_);
      } else {
        return inboundBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public int getInboundCount() {
      if (inboundBuilder_ == null) {
        return inbound_.size();
      } else {
        return inboundBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public com.v2ray.core.app.proxyman.InboundHandlerConfig getInbound(int index) {
      if (inboundBuilder_ == null) {
        return inbound_.get(index);
      } else {
        return inboundBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder setInbound(
        int index, com.v2ray.core.app.proxyman.InboundHandlerConfig value) {
      if (inboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInboundIsMutable();
        inbound_.set(index, value);
        onChanged();
      } else {
        inboundBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder setInbound(
        int index, com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder builderForValue) {
      if (inboundBuilder_ == null) {
        ensureInboundIsMutable();
        inbound_.set(index, builderForValue.build());
        onChanged();
      } else {
        inboundBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder addInbound(com.v2ray.core.app.proxyman.InboundHandlerConfig value) {
      if (inboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInboundIsMutable();
        inbound_.add(value);
        onChanged();
      } else {
        inboundBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder addInbound(
        int index, com.v2ray.core.app.proxyman.InboundHandlerConfig value) {
      if (inboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInboundIsMutable();
        inbound_.add(index, value);
        onChanged();
      } else {
        inboundBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder addInbound(
        com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder builderForValue) {
      if (inboundBuilder_ == null) {
        ensureInboundIsMutable();
        inbound_.add(builderForValue.build());
        onChanged();
      } else {
        inboundBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder addInbound(
        int index, com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder builderForValue) {
      if (inboundBuilder_ == null) {
        ensureInboundIsMutable();
        inbound_.add(index, builderForValue.build());
        onChanged();
      } else {
        inboundBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder addAllInbound(
        java.lang.Iterable<? extends com.v2ray.core.app.proxyman.InboundHandlerConfig> values) {
      if (inboundBuilder_ == null) {
        ensureInboundIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inbound_);
        onChanged();
      } else {
        inboundBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder clearInbound() {
      if (inboundBuilder_ == null) {
        inbound_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        inboundBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public Builder removeInbound(int index) {
      if (inboundBuilder_ == null) {
        ensureInboundIsMutable();
        inbound_.remove(index);
        onChanged();
      } else {
        inboundBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder getInboundBuilder(
        int index) {
      return getInboundFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder getInboundOrBuilder(
        int index) {
      if (inboundBuilder_ == null) {
        return inbound_.get(index);  } else {
        return inboundBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder> 
         getInboundOrBuilderList() {
      if (inboundBuilder_ != null) {
        return inboundBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(inbound_);
      }
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder addInboundBuilder() {
      return getInboundFieldBuilder().addBuilder(
          com.v2ray.core.app.proxyman.InboundHandlerConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder addInboundBuilder(
        int index) {
      return getInboundFieldBuilder().addBuilder(
          index, com.v2ray.core.app.proxyman.InboundHandlerConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Inbound handler configurations. Must have at least one item.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.InboundHandlerConfig inbound = 1;</code>
     */
    public java.util.List<com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder> 
         getInboundBuilderList() {
      return getInboundFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.proxyman.InboundHandlerConfig, com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder> 
        getInboundFieldBuilder() {
      if (inboundBuilder_ == null) {
        inboundBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.proxyman.InboundHandlerConfig, com.v2ray.core.app.proxyman.InboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.InboundHandlerConfigOrBuilder>(
                inbound_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        inbound_ = null;
      }
      return inboundBuilder_;
    }

    private java.util.List<com.v2ray.core.app.proxyman.OutboundHandlerConfig> outbound_ =
      java.util.Collections.emptyList();
    private void ensureOutboundIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        outbound_ = new java.util.ArrayList<com.v2ray.core.app.proxyman.OutboundHandlerConfig>(outbound_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.proxyman.OutboundHandlerConfig, com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder> outboundBuilder_;

    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.proxyman.OutboundHandlerConfig> getOutboundList() {
      if (outboundBuilder_ == null) {
        return java.util.Collections.unmodifiableList(outbound_);
      } else {
        return outboundBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public int getOutboundCount() {
      if (outboundBuilder_ == null) {
        return outbound_.size();
      } else {
        return outboundBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public com.v2ray.core.app.proxyman.OutboundHandlerConfig getOutbound(int index) {
      if (outboundBuilder_ == null) {
        return outbound_.get(index);
      } else {
        return outboundBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder setOutbound(
        int index, com.v2ray.core.app.proxyman.OutboundHandlerConfig value) {
      if (outboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutboundIsMutable();
        outbound_.set(index, value);
        onChanged();
      } else {
        outboundBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder setOutbound(
        int index, com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder builderForValue) {
      if (outboundBuilder_ == null) {
        ensureOutboundIsMutable();
        outbound_.set(index, builderForValue.build());
        onChanged();
      } else {
        outboundBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder addOutbound(com.v2ray.core.app.proxyman.OutboundHandlerConfig value) {
      if (outboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutboundIsMutable();
        outbound_.add(value);
        onChanged();
      } else {
        outboundBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder addOutbound(
        int index, com.v2ray.core.app.proxyman.OutboundHandlerConfig value) {
      if (outboundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutboundIsMutable();
        outbound_.add(index, value);
        onChanged();
      } else {
        outboundBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder addOutbound(
        com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder builderForValue) {
      if (outboundBuilder_ == null) {
        ensureOutboundIsMutable();
        outbound_.add(builderForValue.build());
        onChanged();
      } else {
        outboundBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder addOutbound(
        int index, com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder builderForValue) {
      if (outboundBuilder_ == null) {
        ensureOutboundIsMutable();
        outbound_.add(index, builderForValue.build());
        onChanged();
      } else {
        outboundBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder addAllOutbound(
        java.lang.Iterable<? extends com.v2ray.core.app.proxyman.OutboundHandlerConfig> values) {
      if (outboundBuilder_ == null) {
        ensureOutboundIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outbound_);
        onChanged();
      } else {
        outboundBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder clearOutbound() {
      if (outboundBuilder_ == null) {
        outbound_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        outboundBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public Builder removeOutbound(int index) {
      if (outboundBuilder_ == null) {
        ensureOutboundIsMutable();
        outbound_.remove(index);
        onChanged();
      } else {
        outboundBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder getOutboundBuilder(
        int index) {
      return getOutboundFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder getOutboundOrBuilder(
        int index) {
      if (outboundBuilder_ == null) {
        return outbound_.get(index);  } else {
        return outboundBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public java.util.List<? extends com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder> 
         getOutboundOrBuilderList() {
      if (outboundBuilder_ != null) {
        return outboundBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(outbound_);
      }
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder addOutboundBuilder() {
      return getOutboundFieldBuilder().addBuilder(
          com.v2ray.core.app.proxyman.OutboundHandlerConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder addOutboundBuilder(
        int index) {
      return getOutboundFieldBuilder().addBuilder(
          index, com.v2ray.core.app.proxyman.OutboundHandlerConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Outbound handler configurations. Must have at least one item. The first item is used as default for routing.
     * </pre>
     *
     * <code>repeated .v2ray.core.app.proxyman.OutboundHandlerConfig outbound = 2;</code>
     */
    public java.util.List<com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder> 
         getOutboundBuilderList() {
      return getOutboundFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.app.proxyman.OutboundHandlerConfig, com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder> 
        getOutboundFieldBuilder() {
      if (outboundBuilder_ == null) {
        outboundBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.app.proxyman.OutboundHandlerConfig, com.v2ray.core.app.proxyman.OutboundHandlerConfig.Builder, com.v2ray.core.app.proxyman.OutboundHandlerConfigOrBuilder>(
                outbound_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        outbound_ = null;
      }
      return outboundBuilder_;
    }

    private java.util.List<com.v2ray.core.common.serial.TypedMessage> app_ =
      java.util.Collections.emptyList();
    private void ensureAppIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        app_ = new java.util.ArrayList<com.v2ray.core.common.serial.TypedMessage>(app_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder> appBuilder_;

    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public java.util.List<com.v2ray.core.common.serial.TypedMessage> getAppList() {
      if (appBuilder_ == null) {
        return java.util.Collections.unmodifiableList(app_);
      } else {
        return appBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public int getAppCount() {
      if (appBuilder_ == null) {
        return app_.size();
      } else {
        return appBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage getApp(int index) {
      if (appBuilder_ == null) {
        return app_.get(index);
      } else {
        return appBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder setApp(
        int index, com.v2ray.core.common.serial.TypedMessage value) {
      if (appBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppIsMutable();
        app_.set(index, value);
        onChanged();
      } else {
        appBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder setApp(
        int index, com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (appBuilder_ == null) {
        ensureAppIsMutable();
        app_.set(index, builderForValue.build());
        onChanged();
      } else {
        appBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder addApp(com.v2ray.core.common.serial.TypedMessage value) {
      if (appBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppIsMutable();
        app_.add(value);
        onChanged();
      } else {
        appBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder addApp(
        int index, com.v2ray.core.common.serial.TypedMessage value) {
      if (appBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppIsMutable();
        app_.add(index, value);
        onChanged();
      } else {
        appBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder addApp(
        com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (appBuilder_ == null) {
        ensureAppIsMutable();
        app_.add(builderForValue.build());
        onChanged();
      } else {
        appBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder addApp(
        int index, com.v2ray.core.common.serial.TypedMessage.Builder builderForValue) {
      if (appBuilder_ == null) {
        ensureAppIsMutable();
        app_.add(index, builderForValue.build());
        onChanged();
      } else {
        appBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder addAllApp(
        java.lang.Iterable<? extends com.v2ray.core.common.serial.TypedMessage> values) {
      if (appBuilder_ == null) {
        ensureAppIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, app_);
        onChanged();
      } else {
        appBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder clearApp() {
      if (appBuilder_ == null) {
        app_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        appBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public Builder removeApp(int index) {
      if (appBuilder_ == null) {
        ensureAppIsMutable();
        app_.remove(index);
        onChanged();
      } else {
        appBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder getAppBuilder(
        int index) {
      return getAppFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessageOrBuilder getAppOrBuilder(
        int index) {
      if (appBuilder_ == null) {
        return app_.get(index);  } else {
        return appBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public java.util.List<? extends com.v2ray.core.common.serial.TypedMessageOrBuilder> 
         getAppOrBuilderList() {
      if (appBuilder_ != null) {
        return appBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(app_);
      }
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder addAppBuilder() {
      return getAppFieldBuilder().addBuilder(
          com.v2ray.core.common.serial.TypedMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public com.v2ray.core.common.serial.TypedMessage.Builder addAppBuilder(
        int index) {
      return getAppFieldBuilder().addBuilder(
          index, com.v2ray.core.common.serial.TypedMessage.getDefaultInstance());
    }
    /**
     * <pre>
     * App configuration. Must be one in the app directory.
     * </pre>
     *
     * <code>repeated .v2ray.core.common.serial.TypedMessage app = 4;</code>
     */
    public java.util.List<com.v2ray.core.common.serial.TypedMessage.Builder> 
         getAppBuilderList() {
      return getAppFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder> 
        getAppFieldBuilder() {
      if (appBuilder_ == null) {
        appBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.v2ray.core.common.serial.TypedMessage, com.v2ray.core.common.serial.TypedMessage.Builder, com.v2ray.core.common.serial.TypedMessageOrBuilder>(
                app_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        app_ = null;
      }
      return appBuilder_;
    }

    private com.v2ray.core.transport.Config transport_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.transport.Config, com.v2ray.core.transport.Config.Builder, com.v2ray.core.transport.ConfigOrBuilder> transportBuilder_;
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public boolean hasTransport() {
      return transportBuilder_ != null || transport_ != null;
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public com.v2ray.core.transport.Config getTransport() {
      if (transportBuilder_ == null) {
        return transport_ == null ? com.v2ray.core.transport.Config.getDefaultInstance() : transport_;
      } else {
        return transportBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public Builder setTransport(com.v2ray.core.transport.Config value) {
      if (transportBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transport_ = value;
        onChanged();
      } else {
        transportBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public Builder setTransport(
        com.v2ray.core.transport.Config.Builder builderForValue) {
      if (transportBuilder_ == null) {
        transport_ = builderForValue.build();
        onChanged();
      } else {
        transportBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public Builder mergeTransport(com.v2ray.core.transport.Config value) {
      if (transportBuilder_ == null) {
        if (transport_ != null) {
          transport_ =
            com.v2ray.core.transport.Config.newBuilder(transport_).mergeFrom(value).buildPartial();
        } else {
          transport_ = value;
        }
        onChanged();
      } else {
        transportBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public Builder clearTransport() {
      if (transportBuilder_ == null) {
        transport_ = null;
        onChanged();
      } else {
        transport_ = null;
        transportBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public com.v2ray.core.transport.Config.Builder getTransportBuilder() {
      
      onChanged();
      return getTransportFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    public com.v2ray.core.transport.ConfigOrBuilder getTransportOrBuilder() {
      if (transportBuilder_ != null) {
        return transportBuilder_.getMessageOrBuilder();
      } else {
        return transport_ == null ?
            com.v2ray.core.transport.Config.getDefaultInstance() : transport_;
      }
    }
    /**
     * <code>optional .v2ray.core.transport.Config transport = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.v2ray.core.transport.Config, com.v2ray.core.transport.Config.Builder, com.v2ray.core.transport.ConfigOrBuilder> 
        getTransportFieldBuilder() {
      if (transportBuilder_ == null) {
        transportBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.v2ray.core.transport.Config, com.v2ray.core.transport.Config.Builder, com.v2ray.core.transport.ConfigOrBuilder>(
                getTransport(),
                getParentForChildren(),
                isClean());
        transport_ = null;
      }
      return transportBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:v2ray.core.Config)
  }

  // @@protoc_insertion_point(class_scope:v2ray.core.Config)
  private static final com.v2ray.core.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.v2ray.core.Config();
  }

  public static com.v2ray.core.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Config(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  public com.v2ray.core.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

